<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.EmpMapper">

    <resultMap id="result" type="com.example.demo.entity.Emp">
        <result property="empName" column="emp_name" />
        <result property="sex" column="sex" />
        <result property="age" column="age" />
        <result property="deptName" column="dept_name"/>
        <result property="id" column="id"/>
        <result property="empDegreeName" column="emp_degree_name"/>
    </resultMap>

    <select id="search" resultMap="result" parameterType="com.example.demo.entity.Emp">
        select * from emp
        where 1=1
        <if test="empName != '' and empName != null">
            and emp_name like concat('%',#{empName},'%')
        </if>
        <if test="deptName != '' and deptName != null">
            and dept_name = #{deptName}
        </if>
        <if test="empDegreeName != '' and empDegreeName != null">
            and emp_degree_name = #{empDegreeName}
        </if>
        order by id desc
        limit 1,10
    </select>

    <select id="searchCount" resultType="Integer" parameterType="com.example.demo.entity.Emp">
        select count(*) from emp
        where 1=1
        <if test="empName != '' and empName != null">
            and emp_name like concat('%',#{empName},'%')
        </if>
        <if test="deptName != '' and deptName != null">
            and emp_name = #{deptName}
        </if>
        <if test="empDegreeName != '' and empDegreeName != null">
            and emp_degree_name = #{empDegreeName}
        </if>
    </select>

    <select id="ListEmp" resultMap="result">
        SELECT * FROM emp
    </select>

    <select id="findUserByName" resultMap="result" parameterType="String">
        SELECT * FROM emp
        where userName like concat(concat('%',#{userName}),'%')
        order by userId desc
    </select>

    <select id="queryPage" resultMap="result"  parameterType="Integer">
        select * from emp
        order by id desc
            limit #{startRows},10
    </select>

    <select id="getRowCount" resultType="Integer">
        select count(*) from emp
    </select>

    <insert id="insertEmp" parameterType="com.example.demo.entity.Emp">
        INSERT INTO emp
        (
            emp_name,sex,age,dept_name, emp_degree_name
        )
        VALUES (
                   #{empName},
                   #{sex},
                   #{age},
                   #{deptName},
                   #{empDegreeName}
               )
    </insert>

    <delete id="delete" parameterType="int">
        delete from emp where id=#{id}
    </delete>

    <update id="Update" parameterType="com.example.demo.entity.Emp">
        update emp
        set emp.emp_name=#{empName},emp.sex=#{sex},emp.age=#{age},emp.dept_name=#{deptName},emp.emp_degree_name=#{empDegreeName}
        where emp.id=#{id}
    </update>
</mapper>